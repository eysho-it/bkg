/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Gpu as PrismaGpu } from "@prisma/client";

export class GpuServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GpuCountArgs, "select">): Promise<number> {
    return this.prisma.gpu.count(args);
  }

  async gpus<T extends Prisma.GpuFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.GpuFindManyArgs>
  ): Promise<PrismaGpu[]> {
    return this.prisma.gpu.findMany<Prisma.GpuFindManyArgs>(args);
  }
  async gpu<T extends Prisma.GpuFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.GpuFindUniqueArgs>
  ): Promise<PrismaGpu | null> {
    return this.prisma.gpu.findUnique(args);
  }
  async createGpu<T extends Prisma.GpuCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GpuCreateArgs>
  ): Promise<PrismaGpu> {
    return this.prisma.gpu.create<T>(args);
  }
  async updateGpu<T extends Prisma.GpuUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GpuUpdateArgs>
  ): Promise<PrismaGpu> {
    return this.prisma.gpu.update<T>(args);
  }
  async deleteGpu<T extends Prisma.GpuDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.GpuDeleteArgs>
  ): Promise<PrismaGpu> {
    return this.prisma.gpu.delete(args);
  }
}
